// Part of Measurement Kit <https://measurement-kit.github.io/>.
// Measurement Kit is free software under the BSD license. See AUTHORS
// and LICENSE for more information on the copying conditions.
#ifndef MEASUREMENT_KIT_FFI_NETTEST_HPP
#define MEASUREMENT_KIT_FFI_NETTEST_HPP

/*-
 *  __      __  _____ __________  _______  .___ _______    ________
 * /  \    /  \/  _  \\______   \ \      \ |   |\      \  /  _____/
 * \   \/\/   /  /_\  \|       _/ /   |   \|   |/   |   \/   \  ___
 *  \        /    |    \    |   \/    |    \   /    |    \    \_\  \
 *   \__/\  /\____|__  /____|_  /\____|__  /___\____|__  /\______  /
 *        \/         \/       \/         \/            \/        \/
 *
 * Autogenerated by measurement-kit/ffi-tools; DO NOT EDIT!
 *
 * See https://github.com/measurement-kit/ffi-tools for more information.
 *
 * Code in this file is not Doxygen-documented because it's meant for
 * internal Measurement Kit consumption only.
 */

#include <measurement_kit/ffi/task.hpp>

namespace mk {
namespace ffi {

// Helper class useful to implement a real network test. It adds to the parent
// ffi::Task class knowledge about the structure of settings and events. It
// does not override the methods that actually start and stop a test, as this
// is dependent upon MK internals. It just adds support for events.
class NettestHelper : public Task {
 public:
  // Using the same constructor of the parent class.
  using Task::Task;

  // Necessary because the parent class has virtual destructor.
  ~NettestHelper() noexcept override;

 protected:
  // Method that in debug mode aborts if passed an invalid event.
  nlohmann::json possibly_validate_event(nlohmann::json &&ev) override;

  // Make sure that settings are okay.
  bool check_settings(const nlohmann::json &settings) override;
};

#ifndef MK_FFI_NETTEST_NO_INLINE_IMPL

NettestHelper::~NettestHelper() noexcept {}

nlohmann::json NettestHelper::possibly_validate_event(nlohmann::json &&ev) {
}

bool NettestHelper::check_settings(const nlohmann::json &settings) {
}

#endif  // MK_FFI_NETTEST_NO_INLINE_IMPL
}  // namespace ffi
}  // namespace mk
#endif
