{% for event in events %}
// --->8 src/main/java/io/ooni/mk/nettest/event/{{ event.key.to_pascal_case() }}Event.java 8<---

package io.ooni.mk.nettest.event;

public class {{ event.key.to_pascal_case() }}Event {
  public static final String key = "{{ event.key }}";
  {% if event.attributes|length > 0 %}{% for attribute in event.attributes %}public {{ attribute.base_type.decl("java") }} {{ attribute.key.to_camel_case() }} = {{ attribute.base_type.default_value("java") }};{{ "\n  " if not loop.last }}{% endfor %}{% else %}/* No event specific attributes. */{% endif %}
}{% endfor %}

// --->8 src/main/java/io/ooni/mk/nettest/settings/CommonSettings.java 8<---

package io.ooni.mk.nettest.settings;

public class CommonSettings {
  {% for log_level in log_levels %}public static final String {{log_level.key.to_camel_case() }} = "{{ log_level.key.to_snake_case_upper() }}";{{ "\n  " if not loop.last }}{% endfor %}
  {% for attribute in settings if not attribute.low_level %}public {{ attribute.base_type.decl("java") }} {{ attribute.key.to_camel_case() }} = {{ attribute.base_type.default_value("java") }};{{ "\n  " if not loop.last }}{% endfor %}
  {% for attribute in options %}public {{ attribute.base_type.decl("java") }} {{ attribute.key.to_camel_case() }} = {{ attribute.base_type.default_value("java") }};{{ "\n  " if not loop.last }}{% endfor %}
}

{% for nettest in nettests %}
// --->8 src/main/java/io/ooni/mk/nettest/settings/{{ nettest.key.to_pascal_case() }}Settings.java 8<---

package io.ooni.mk.nettest.settings;

public class {{ nettest.key.to_pascal_case() }}Settings extends CommonSettings {
  public static final boolean needsInput = {{ nettest.needs_input.default_value("java") }};
  {% if nettest.options is not none %}{% for option in nettest.options %}public {{ option.base_type.decl("java") }} {{ option.key.to_camel_case() }} = {{ option.base_type.default_value("java") }};{{ "\n  " if not loop.last }}{% endfor %}{% else %}/* No nettest specific options. */{% endif %}
}
{% endfor %}

// --->8 src/main/java/io/ooni/mk/nettest/Runner.java 8<---

package io.ooni.mk.nettest;

public class Runner {
  // Handlers
  // --------
  {% for event in events %}
  public void on{{ event.key.to_pascal_case() }}(io.ooni.mk.nettest.event.{{ event.key.to_pascal_case() }}Event event) {
    // TODO: override this callback if you're interested
  }
  {% endfor %}
  // Runners
  // -------
  {% for nettest in nettests %}
  public String prepare{{ nettest.key.to_pascal_case() }}(io.ooni.mk.nettest.settings.{{ nettest.key.to_pascal_case() }}Settings settings) {
    io.ooni.mk.nettest.swig.{{ nettest.key.to_pascal_case() }} swigSettings = new io.ooni.mk.nettest.swig.{{ nettest.key.to_pascal_case() }}();
    {% if nettest.options is not none %}{% for option in nettest.options %}swigSettings.set{{ option.key.to_snake_case() | capitalize }}(settings.{{ option.key.to_camel_case() }});{% endfor %}{% else %}/* No nettest specific options. */{% endif %}
    setCommonOptions(settings, swigSettings);
    // Use a temporary runner for generating the serialized settings.
    io.ooni.mk.nettest.swig.Runner swigRunner = new RunnerWrapper(this);
    return swigRunner.prepare_{{ nettest.key.to_snake_case() }}(swigSettings);
  }
  {% endfor %}

  public void run(String serializedSettings) {
    io.ooni.mk.nettest.swig.Runner swigRunner = new RunnerWrapper(this);
    swigRunner.run(serializedSettings);
  }

  // Private stuff
  // -------------

  private void setCommonOptions(io.ooni.mk.nettest.settings.CommonSettings settings, io.ooni.mk.nettest.swig.Common swigSettings) {
    {% for attribute in settings if not attribute.low_level and attribute.base_type.is_scalar() %}swigSettings.set{{ attribute.key.to_snake_case() | capitalize }}(settings.{{ attribute.key.to_camel_case() }});{{ "\n    " if not loop.last }}{% endfor %}

    {% for attribute in settings if not attribute.low_level and attribute.base_type.is_map() %}{
      io.ooni.mk.nettest.swig.MapStringString m = new io.ooni.mk.nettest.swig.MapStringString();
      for (String key : settings.{{ attribute.key.to_camel_case() }}.keySet()) {
        String value = settings.{{ attribute.key.to_camel_case() }}.get(key);
        m.set(key, value);
      }
      swigSettings.set{{ attribute.key.to_snake_case() | capitalize }}(m);
    }
    {% endfor %}
    {% for attribute in settings if not attribute.low_level and attribute.base_type.is_vector() %}{
      io.ooni.mk.nettest.swig.VectorString v = new io.ooni.mk.nettest.swig.VectorString();
      for (String entry : settings.{{ attribute.key.to_camel_case() }}) {
        v.add(entry);
      }
      swigSettings.set{{ attribute.key.to_snake_case() | capitalize }}(v);
    }
    {% endfor %}
    {% for attribute in options if not attribute.low_level %}swigSettings.set{{ attribute.key.to_snake_case() | capitalize }}(settings.{{ attribute.key.to_camel_case() }});{{ "\n    " if not loop.last }}{% endfor %}
  }
}

// --->8 src/main/java/io/ooni/mk/nettest/RunnerWrapper.java 8<---

package io.ooni.mk.nettest;

class RunnerWrapper extends io.ooni.mk.nettest.swig.Runner {
  public RunnerWrapper(Runner parent) {
    this.parent = parent;
  }
  {% for event in events %}
  @Override
  public void on_{{ event.key.to_snake_case() }}(io.ooni.mk.nettest.swig.{{ event.key.to_pascal_case() }} swigEvent) {
    io.ooni.mk.nettest.event.{{ event.key.to_pascal_case() }}Event event = new io.ooni.mk.nettest.event.{{ event.key.to_pascal_case() }}Event();
    {% if event.attributes | length > 0 %}{% for attribute in event.attributes %}event.{{ attribute.key.to_camel_case() }} = swigEvent.get{{ attribute.key.to_snake_case() | capitalize }}();{{ "\n    " if not loop.last }}{% endfor %}{% else %}/* No event specific attributes */{% endif %}
    parent.on{{ event.key.to_pascal_case() }}(event);
  }
  {% endfor %}/*{% for nettest in nettests %}
  @Override
  public void run_{{ nettest.key.to_snake_case() }}(io.ooni.mk.nettest.swig.{{ nettest.key.to_pascal_case() }} swigSettings) {
    super.run_{{ nettest.key.to_snake_case() }}(swigSettings);
  }
  {% endfor %}*/
  private Runner parent;
}
